<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/security/tags"
	prefix="security"%>
<%@ taglib uri="http://www.springframework.org/tags" prefix="spring"%>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="security" %>  

      
<script src="${pageContext.request.contextPath }/resources/ckeditor/ckeditor.js"></script>
<security:authentication property="principal.realMember" var="authMember"/>

<main class="content" style="padding-top:0px;">

	<div class="container-fluid p-0">
	
		<div class="row">
			<!--====================== 작업 상단 바 ======================-->
			<div class="col-12">
				<div class="card">
					<div class="card-header">
						<div class="d-flex flex-row justify-content-between">
							<h3>칸반보드</h3>
						</div>
						<hr>
						<div class="d-flex flex-column justify-content-between">
							<nav aria-label="breadcrumb">
								<ol class="breadcrumb" style="margin:0px;">
									<li class="breadcrumb-item"><a href="#">프로젝트 홈</a></li>
									<li class="breadcrumb-item"><a href="#">작업목록</a></li>
									<li class="breadcrumb-item active">작업추가</li>
								</ol>
							</nav>
							<div role="tablist" class="d-flex flex-row justify-content-end">
								<button class="btn btn-secondary" data-bs-toggle="tab" href="#tab-1" aria-selected="false" role="tab" tabindex="-1" style="margin-right:1rem;">작업 목록</button>
								<button class="btn btn-primary" data-bs-toggle="tab" href="#tab-2" aria-selected="false" role="tab" tabindex="-1">작업 추가</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	
		<div class="row">
			<div class="col-12">
				<div class="card">
						<div class="tab-content">
							<!--====================== 작업 추가 Form ======================-->
							<div class="tab-pane fade" id="tab-2" role="tabpanel">
								<div class="card">
									<div id="projectWorkAddFormHTML" class="card-body"></div>
									<div class="card-footer">
									</div>
								</div>
							</div>
							
							<!--====================== 작업 목록 ======================-->
							<div class="tab-pane fade active show" id="tab-1" role="tabpanel">
								<div class="card">
									<div class="card-body">
										<!-- <table class="table table-striped table-hover"> -->
										<table class="table table-bordered table-hover">
											<thead class="table-primary">
												<tr style="border-color:none;">
													<th style="width: 5%;"></th>
													<th style="width: 6%;">No</th>
													<th style="width: 25%;">작업 이름</th>
													<th style="width: 24%;">담당자</th>
													<th style="width: 10%;">시작날짜</th>
													<th style="width: 10%;">종료날짜</th>
													<th style="width: 10%;">우선순위</th>
													<th style="width: 10%;">진행률</th>
												</tr>
											</thead>
											<tbody id="proWorkListDsip"></tbody>
										</table>
									</div>
									<div class="card-footer d-flex justify-content-end align-items-center">
										<div>
											<button type="button" class="btn btn-secondary projectWorkDeleteBtn">삭제하기</button>
										</div>
									</div>
								</div>
							</div>
							
							<!--=================== 나에게 배정 된 작업 목록 ===================-->
							<div class="tab-pane fade" id="tab-6" role="tabpanel">
								<div class="card">
									<div class="card-body">
										<table class="table table-bordered table-hover">
											<thead class="table-primary">
												<tr style="border-color:none;">
													<th style="width: 5%;"></th>
													<th style="width: 5%;">No</th>
													<th style="width: 25%;">작업 이름</th>
													<th style="width: 25%;">담당자</th>
													<th style="width: 10%;">시작날짜</th>
													<th style="width: 10%;">종료날짜</th>
													<th style="width: 10%;">우선순위</th>
													<th style="width: 10%;">진행률</th>
												</tr>
											</thead>
											<tbody id="proMyWorkListDsip"></tbody>
										</table>
									</div>
									<div class="card-footer d-flex justify-content-end align-items-center">
										<div>
											<button type="button" class="btn btn-secondary projectWorkDeleteBtn">삭제하기</button>
										</div>
									</div>
								</div>
							</div>
						</div>
				</div>
			</div>
		</div>
		
	</div>

		<!--====================== 작업 Detail ======================-->
		<div class="modal fade" id="projectWorkDetailModal" tabindex="-1" style="display: none;" aria-hidden="true">
			<div class="modal-dialog modal-dialog-centered modal-xl" role="document">
				<div class="modal-content" id="projectWorkSelectDetailDisp">
					<div class="modal-header">
						<h5 class="modal-title">작업 자세히보기</h5>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body row">
						<div class="col-md-8 col-xl-8">
							<!--=========== 작업 Detail Form  ==========-->
							<form name="dataForm" class="projectWorkDetailForm">
								<table class="table table-bordered">
									<tr>
										<th>작업 번호</th>
										<td>
											<input type="text" id="workNo" name="workNo" Class="form-control" value="\${work.workNo}" readonly="readonly"/>
										</td>
									</tr>
									<tr>
										<th>프로젝트 번호</th>
										<td>
											<input type="text" id="proCode" name="proCode" Class="form-control" value="\${work.proCode}" readonly="readonly"/>
										</td>
									</tr>
									<tr>
										<th>작업 상위 번호</th>
										<td>
											<input type="text" id="workPntNo" name="workPntNo" Class="form-control" value="\${work.workPntNo}" readonly="readonly"/>
										</td>
									</tr>
									<tr>
										<th>작업 작성자</th>
										<td>
											<input type="text" id="memEmail" name="memEmail" Class="form-control" value="\${work.memEmail}" readonly="readonly"/>
										</td>
									</tr>
									<tr>
										<th>작업 제목</th>
										<td>
											<input type="text" id="workTitle" name="workTitle" Class="form-control workUpdateReadonlyOn" value="\${work.workTitle}" />
										</td>
									</tr>
									<tr>
										<th>
											담당자 별 작업 상태
										</th>
										<td id="workDetialChargerListDisp"></td>
									</tr>
									<tr>
										<th>작업 상태</th>
										<td>
											<select id="workOrderCdSelect" id="workStateCd" name="workStateCd" class="form-control workUpdateReadonlyOn">
												<option value="WS001">시작전</option>
												<option value="WS002">진행중</option>
												<option value="WS003">이슈발생</option>
												<option value="WS004">보류</option>
												<option value="WS005">종료</option>
											</select>
										</td>
									</tr>
									<tr>
										<th>작업 중요도</th>
										<td>
											<select id="workStateCdSelect" id="workOrderCd" name="workOrderCd" class="form-control workUpdateReadonlyOn">
												<option value="WO001">낮음</option>
												<option value="WS002">보통</option>
												<option value="WS003">높음</option>
											</select>
										</td>
									</tr>
									<tr>
										<th>작업 시작 날짜</th>
										<td>
											<input type="date" id="workSdate" name="workSdate" value="\${work.workSdate}" class="form-control workUpdateReadonlyOn"/>
										</td>
									</tr>	
									<tr>
										<th>작업 종료 날짜</th>
										<td>
											<input type="date" id="workEdate" name="workEdate" value="\${work.workEdate}" class="form-control workUpdateReadonlyOn"/>
										</td>
									</tr>
									<tr>
										<th>작업 내용</th>
										<td>
											<input class="workUpdateReadonlyOn" type="text" id="workDetail" name="workDetail" Class="form-control" value="\${work.workDetail}"/>
										</td>
									</tr>
								</table>
							</form>
						</div>
						<!--=========== 작업 댓글 ==========-->
						<div class="col-md-4 col-xl-4">
							<section class="mb-5" style="height:100%;">
			                    <div class="card bg-light" style="height:100%;">
			                        <div class="card-body d-flex flex-column justify-content-between">
			                            <!-- Single comment-->
			                            <div id="projectWorkDetailCommDisp"></div>

			                            <!-- Comment form-->
			                            <div>
				                            <form class="mb-4" id="workCommInsertForm">
				                            	<input type="hidden" id="workCommWorkNo" name="workNo" value=""> 
				                            	<input type="hidden" name="memEmail" value="${authMember.memEmail }">
				                            	<textarea name="workCommCont" class="form-control" rows="3" placeholder="댓글 작성"></textarea>
				                            	<div class="d-flex justify-content-end pt-2">
				                            		<a id="workCommInsertBtn" class="btn btn-primary">작성</a>
				                            	</div>
				                            </form>
			                            </div>
			                        </div>
			                    </div>
			                </section>
						</div>
					</div>
					<div class="modal-footer d-flex justify-content-end align-items-center">
						<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
					</div>
				</div>
			</div>
		</div>

</main>

<footer class="footer"></footer>


<script type="text/javascript">

	// workAddForm 불러오기
	projectWorkAddFormHtml();
	function projectWorkAddFormHtml(){
		$.ajax({
			url : "${pageContext.request.contextPath}/project/notiles/workAddForm/${project.proCode}",
			method : "get",
			success : function(resp) {
				$("#projectWorkAddFormHTML").html(resp);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		})
	}

	/**************************** 공통 시작 ****************************/
	let projectWorkMemberSelectBtn = $("#projectWorkMemberSelectBtn");
	let projectWorkMemberAddBtn = $("#projectWorkMemberAddBtn");
	let isWorkMemberRemoveBtn = $(".isWorkMemberRemoveBtn");

	let proWorkListBtn = $("#proWorkListBtn");
	let proMyWorkListBtn = $("#proMyWorkListBtn");
	let projectWorkDetailBtn = $("#projectWorkDetailBtn");
	let projectWorkPntNoSelectBtn = $("#projectWorkPntNoSelectBtn");
	let projectWorkPntNoAddBtn = $("#projectWorkPntNoAddBtn");
	let projectWorkDeleteBtn = $(".projectWorkDeleteBtn");
	let projectWorkUpdateFormBtn = $(".projectWorkUpdateFormBtn");
	let projectWorkUpdateBtn = $(".projectWorkUpdateBtn");
	let projectWorkAddBtn = $("#projectWorkAddBtn");
	
	let proWorkListDsip = $("#proWorkListDsip")
	let projectMemberListDisp = $("#projectMemberListDisp");
	let projectWorkMemberSelectListDisp = $("#projectWorkMemberSelectListDisp");
	let projectWorkSelectDetailDisp = $("#projectWorkSelectDetailDisp");
	let proMyWorkListDsip = $("#proMyWorkListDsip");
	let projectWorkPntNoDisp = $("#projectWorkPntNoDisp");
	let projectWorkPntNoSelectDisp = $("#projectWorkPntNoSelectDisp");
	let isWorkMember = $(".isWorkMember");
	
	let projectWorkDetailForm = $(".projectWorkDetailForm");
	
	// 인수 라이브러리1
	function fn_seri(myForm){
	    let elems = myForm.elements
	    let myObj = {}
	    for(let i=0; i<elems.length; i++){
	        if(myObj.hasOwnProperty(elems[i].name)){
	        	if(Array.isArray(myObj[elems[i].name])){            		
	          	myObj[elems[i].name].push(elems[i].value);
	        	}else{            		
	          	let array = [myObj[elems[i].name]]
	          	array.push(elems[i].value);
	          	myObj[elems[i].name] = array;
	        	}
	        }else{
	          myObj[elems[i].name] = elems[i].value;
	        }
	    }
		return myObj;
	}
	/**************************** 공통 끝 ****************************/
	
	
	/**************************** 작업 Detail 시작 ****************************/
	
	// 작업 Detail)
	// 작업 자세히보기 : 담당자 목록 html
	function f_WorkChargerListHtml(data){
		let workChargerListHtml = "";
			for (var j = 0; j < data.workChargerList.length; j++) {
				workChargerListHtml += `
					<p>
						<input type="text" name="workChargerListMemEmail" value="\${data.workChargerList[j].memEmail}" readonly="readonly"/>
						<div class="progress progress-sm workUpdateReadonlyOn">
							<div class="progress-bar" id="bar\${j}" role="progressbar" aria-valuemin="0" data-cnt="bar\${j}" aria-valuemax="100" aria-valuenow="\${data.workChargerList[j].workProgress}" style="width:\${data.workChargerList[j].workProgress}%;"></div>
						</div>
						<select name="workChargerListProgress" id="\${j}" class="form-control workUpdateReadonlyOn">
							<option value="\${data.workChargerList[j].workProgress}" selected>\${data.workChargerList[j].workProgress}</option>
							<option value="10">10%</option>
							<option value="20">20%</option>
							<option value="30">30%</option>
							<option value="40">40%</option>
							<option value="50">50%</option>
							<option value="60">60%</option>
							<option value="70">70%</option>
							<option value="80">80%</option>
							<option value="90">90%</option>
							<option value="100">100%</option>
						</select>
					</p>
				`;	
			}
		return workChargerListHtml;
	}
	
	// 작업 Detail)
	// 작업 댓글 html				
	function f_WorkDetailCommListHtml(data){
		let workDetailCommListHtml = "";
			for (var i = 0; i < data.length; i++) {
				workDetailCommListHtml +=`
                    <div class="d-flex" >
						<div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..."></div>
				        <div class="ms-3">
				            <div class="fw-bold">\${data[i].memEmail}</div>
				            	\${data[i].workCommCont}
				        </div>
			        </div>
                    <hr>
	        	`
			}
		return workDetailCommListHtml;
	}
	
	// 작업 Detail)
	// 작업 자세히보기 ( 작업 눌렀을 때 Detail 템플릿 적용 )
	$(document).on("click",".projectWorkDetailBtn",function(){

		let proCode = "${project.proCode}";
		let workNo = $(this).data("workNo");	
		let data = {"proCode":proCode,"workNo":workNo};

		$.ajax({
			url:"${pageContext.request.contextPath}/project/project/kanban/workDetail",
			contentType:"application/json;charset=utf-8",
			data:JSON.stringify(data),
			type:"post",
			dataType:"json",
			success : function(res) {
				$("#workNo").val(res.workNo);
				$("#proCode").val(res.proCode);
				$("#workPntNo").val(res.workPntNo);
				$("#memEmail").val(res.memEmail);
				$("#workTitle").val(res.workTitle);
				$("#workDetialChargerListDisp").html(f_WorkChargerListHtml(res));
				if($("#workOrderCdSelect").val() == res.workOrderCdSelect){
					$("#workOrderCdSelect").val().attr("selected", "selected");
				}
				if($("#workStateCdSelect").val() == res.workStateCdSelect){
					$("#workOrderCdSelect").val().attr("selected", "selected");
				}
				$("#workSdate").val(res.workSdate);
				$("#workEdate").val(res.workEdate);
				$("#workDetail").val(res.workDetail);
				
				$("#workCommWorkNo").val(res.workNo);
				
				f_WorkCommListView(res.workNo);
			},
			error : function(xhr, error, msg) {
				ajaxError(xhr, error, msg);
			}
		});
	});
	
	// 작업 Detail)
	// 작업 댓글 달기
	$("#workCommInsertBtn").on("click",function(){
		console.log("hi");
		let data = $("#workCommInsertForm").serialize();
		console.log(data);
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workCommInsert",
			method : "post",
			data : data,
			dataType : "json",
			success : function(resp) {
				let workNo = resp + "";
				f_WorkCommListView(workNo);
				$("textarea[name=workCommCont]").val('');
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	});
	
	// 작업 Detail)
	// 작업 수정
	$(document).on("input",".projectWorkDetailForm",function(){
		let data = new Object();
		let cnt = 0;
		let dataObject = {};
		data = fn_seri($(".projectWorkDetailForm")[0]);
		let workNoData = data.workNo;
		let workProgressList = data.workChargerListProgress;
		let workProgressMemEmail = data.workChargerListMemEmail;

		// 만약에 배열이 아니라면 그대로 객체에 넣는다.
		if(Array.isArray(workProgressList)){            		
			delete data.workChargerListProgress;
			delete data.workChargerListMemEmail;      		
			let workChargerList = [];
			for(let i=0; i<workProgressMemEmail.length; i++){
				let workChargerData = {};
				workChargerData['workNo'] = workNoData;
				workChargerData['memEmail'] = workProgressMemEmail[i];
				workChargerData['workProgress'] = workProgressList[i];
				$("#bar"+i).css("width",workProgressList[i]+"%");
				workChargerList.push(workChargerData);
				data['workChargerList'] = workChargerList;
			}
    	}else{
    		let workChargerList = [];
    		let workChargerData = {};
			workChargerData['workNo'] = workNoData;
			workChargerData['memEmail'] = workProgressMemEmail;
			workChargerData['workProgress'] = workProgressList;
			$("#bar"+0).css("width",workProgressList+"%");
			workChargerList.push(workChargerData);
			data['workChargerList'] = workChargerList;
    	}
		
 		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workUpdate",
			method : "post",
			data : JSON.stringify(data),
			contentType : "application/json;charset=utf-8;",
			success : function(resp) {
				console.log(resp);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});  
	});
	
	// 작업 Detail
	// 작업 댓글 목록 가져오기
	function f_WorkCommListView(workNo){
		let data = {"workNo" : workNo};
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workCommList",
			method : "post",
			data: JSON.stringify(data),
			contentType:"application/json;charset=utf-8",
			dataType : "json",
			success : function(resp) {
				console.log("댓글",resp);
				console.log(resp.length == 0);
				if(resp.length == 0){
					$("#projectWorkDetailCommDisp").html('<p>댓글이 없습니다.</p><hr>')
				}else{					
					$("#projectWorkDetailCommDisp").html(f_WorkDetailCommListHtml(resp));
				}
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	} 
	
	/**************************** 작업 Detail 끝 ****************************/

	
	/**************************** 작업 목록  시작 ****************************/
	// 작업 목록 )
	// 프로젝트 목록 리스트 html
	let makeProjectWorkListHtml = function(work){
		let projectWorkListHtml = "";
			projectWorkListHtml += `
				<tr>
					<td>
						<input class="form-check-input workNoUpCheck" data-work-no="\${work.workNo}" type="checkbox" value="">		
					</td>
					<td>
						\${work.workNo}
					</td>
					<td>
						<a id="projectWorkDetailBtn" data-bs-toggle="modal" data-bs-target="#projectWorkDetailModal" data-work-no="\${work.workNo}">
							\${work.workTitle}
						</a>
					</td>
					<td>
			`					
					for (var j = 0; j < work.workChargerList.length; j++) {
			projectWorkListHtml += `
					<p>
						<img src="${pageContext.request.contextPath }/resources/images/pms/200.png"
							width="48" height="48" class="rounded-circle me-2"
							alt="Avatar">
						\${work.workChargerList[j].memEmail}
					</p>
					`
					}
					
			projectWorkListHtml +=`
					</td>
					<td>
						<input type="date" name="workSdate" class="form-control" value="\${work.workSdate}"/>
					</td>
					<td>
						<input type="date" name="workEdate" class="form-control" value="\${work.workEdate}"/>
					</td>
					<td>
						<select name="workOrderCd" class="form-control">
							<option value="WO001" selected>낮음</option>
							<option value="WS002">보통</option>
							<option value="WS003">높음</option>
						</select>
					</td>
					<td>
						<select name="workStateCd" class="form-control">
							<option value="WS001" selected>시작전</option>
							<option value="WS002">진행중</option>
							<option value="WS003">이슈발생</option>
							<option value="WS004">보류</option>
							<option value="WS005">종료</option>
						</select>
					</td>
				</tr>
				`;
		
		return projectWorkListHtml;
	}
	
	// 작업 목록 )
	// 프로젝트 목록 리스트 html (상위 작업이 있는 경우)
	let makeProjectWorkFntNoListHtml = function(workList){
		let projectWorkFntNoListHtml = "";

		
		for (var i = 0; i < workList.length; i++) {

			projectWorkFntNoListHtml += `
				<tr>
					<td>
						<input class="form-check-input workNoDownCheck" data-work-pnt-no="\${workList[i].workPntNo}" data-work-no="\${workList[i].workNo}" type="checkbox" value="">
					</td>
					<td style="background-color:#e9ecef;">
					<p>\${workList[i].workNo}</p>
					</td>
					<td>
						<a id="projectWorkDetailBtn" data-bs-toggle="modal" data-bs-target="#projectWorkDetailModal" data-work-no="\${workList[i].workNo}">
							\${workList[i].workTitle}
						</a>
					</td>
					<td>
					`;
					
					for (var j = 0; j < workList[i].workChargerList.length; j++) {
			projectWorkFntNoListHtml += `
					<p>
						<img src="${pageContext.request.contextPath }/resources/images/pms/200.png"
							width="48" height="48" class="rounded-circle me-2"
							alt="Avatar">
						\${workList[i].workChargerList[j].memEmail}
					</p>`	
					}
					
			projectWorkFntNoListHtml +=`
					</td>
					<td>
						<input type="date" name="workSdate" class="form-control" value="\${workList[i].workSdate}"/>
					</td>
					<td>
						<input type="date" name="workEdate" class="form-control" value="\${workList[i].workEdate}"/>
					</td>
					<td>
						<select name="workOrderCd" class="form-control">
							<option value="WO001" selected>낮음</option>
							<option value="WS002">보통</option>
							<option value="WS003">높음</option>
						</select>
					</td>
					<td>
						<select name="workStateCd" class="form-control">
							<option value="WS001" selected>시작전</option>
							<option value="WS002">진행중</option>
							<option value="WS003">이슈발생</option>
							<option value="WS004">보류</option>
							<option value="WS005">종료</option>
						</select>
					</td>
				</tr>
				`
				
			}
		
		return projectWorkFntNoListHtml;
	}
	
	// 작업 목록 )
	// 프로젝트 작업 Detail Disp Html
	let makeProjectWorkSelectDetailHtml = function(work){
		let projectWorkSelectDetailHtml = "";
		projectWorkSelectDetailHtml += `
				<div class="modal-header">
					<h5 class="modal-title">작업 자세히보기</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body row">
					<div class="col-md-8 col-xl-8">
					<form name="dataForm" class="projectWorkDetailForm">
						<table class="table table-bordered">
						<tr>
							<th>
								작업 번호
							</th>
								<td>
									<input type="text" name="workNo" Class="form-control" value="\${work.workNo}" readonly="readonly"/>
								</td>
							</tr>
							<th>
								프로젝트 번호
							</th>
								<td>
									<input type="text" name="proCode" Class="form-control" value="\${work.proCode}" readonly="readonly"/>
								</td>
							</tr>
							<th>
								작업 상위 번호
							</th>
								<td>
									<input type="text" name="workPntNo" Class="form-control" value="\${work.workPntNo}"/ readonly="readonly">
								</td>
							</tr>
							<th>
								작업 작성자
							</th>
								<td>
									<input type="text" name="memEmail" Class="form-control" value="\${work.memEmail}"/ readonly="readonly">
								</td>
							</tr>

							<tr>
								<th>
									<spring:message code="work.workTitle" />
								</th>
								<td>
									<input type="text" name="workTitle" Class="form-control workUpdateReadonlyOn" value="\${work.workTitle}"  readonly="readonly"/>
								</td>
							</tr>
							<tr>
								<th>
									담당자 별 작업 상태
								</th>
								<td>
								`;
								for (var j = 0; j < work.workChargerList.length; j++) {
						projectWorkSelectDetailHtml += `
								<p>
									<input type="text" name="workChargerListMemEmail" value="\${work.workChargerList[j].memEmail}" readonly="readonly"/>
									<div class="progress progress-sm workUpdateReadonlyOn">
										<div class="progress-bar" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="\${work.workChargerList[j].workProgress}" style="width:\${work.workChargerList[j].workProgress}%;">
										</div>
									</div>
									<select name="workChargerListProgress" class="form-control workUpdateReadonlyOn" readonly="readonly">
										<option value="\${work.workChargerList[j].workProgress}" selected>\${work.workChargerList[j].workProgress}</option>
										<option value="10">10%</option>
										<option value="20">20%</option>
										<option value="30">30%</option>
										<option value="40">40%</option>
										<option value="50">50%</option>
										<option value="60">60%</option>
										<option value="70">70%</option>
										<option value="80">80%</option>
										<option value="90">90%</option>
										<option value="100">100%</option>
									</select>
								</p>
								`;	
								}
								
						projectWorkSelectDetailHtml +=`
								</td>
							</tr>


							<tr>
								<th><spring:message code="work.workStateCd" /></th>
								<td>
									<select id="workOrderCdSelect" name="workStateCd" class="form-control workUpdateReadonlyOn" readonly="readonly">
										<option value="WS001">시작전</option>
										<option value="WS002">진행중</option>
										<option value="WS003">이슈발생</option>
										<option value="WS004">보류</option>
										<option value="WS005">종료</option>
									</select>
								</td>
							</tr>
							<tr>
								<th><spring:message code="work.workOrderCd" /></th>
								<td>
									<select id="workStateCdSelect" name="workOrderCd" class="form-control workUpdateReadonlyOn" readonly="readonly">
										<option value="WO001">낮음</option>
										<option value="WS002">보통</option>
										<option value="WS003">높음</option>
									</select>
								</td>
							</tr>
							<tr>
								<th><spring:message code="work.workSdate" /></th>
								<td>
									<input type="date" name="workSdate" value="\${work.workSdate}" class="form-control workUpdateReadonlyOn" readonly="readonly"/>
								</td>
							</tr>	
							<tr>
								<th><spring:message code="work.workEdate" /></th>
								<td>
									<input type="date" name="workEdate" value="\${work.workEdate}" class="form-control workUpdateReadonlyOn" readonly="readonly"/>
								</td>
							</tr>
							<tr>
								<th>
									작업 내용
								</th>
								<td>
									<input class="workUpdateReadonlyOn" type="text" name="workDetail" Class="form-control" value="\${work.workDetail}" readonly="readonly"/>
								</td>
							</tr>
							<tr>
								<td colspan="2">
									<div class="d-flex justify-content-end align-items-center">
										<a type="button" class="btn btn-outline-primary projectWorkUpdateFormBtn me-2" >수정폼</a>
										<a type="button" class="btn btn-primary projectWorkUpdateBtn">수정하기</a>
									</div>
								</td>
							</tr>
							
						</table>
	
					</form>
					</div>
					<div class="col-md-4 col-xl-4">
						<section class="mb-5">
		                    <div class="card bg-light">
		                        <div class="card-body">
		                            <!-- Single comment-->
		                            <div class="d-flex">
		                                <div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..."></div>
		                                <div class="ms-3">
		                                    <div class="fw-bold">이찬영</div>
		                                    	이 작업은 제가 하겠습니다.
		                                </div>
		                            </div>
		                            <hr>
		                            <!-- Single comment-->
		                            <div class="d-flex">
		                                <div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..."></div>
		                                <div class="ms-3">
		                                    <div class="fw-bold">김준일</div>
		                                    	이번 프로젝트에 문제가 있다고 생각됩니다.
		                                </div>
		                            </div>
		                            <hr>
		                            <!-- Comment form-->
		                            <div>
			                            <form class="mb-4">
			                            	<textarea class="form-control" rows="3" placeholder="댓글 작성"></textarea>
			                            	<div class="d-flex justify-content-end pt-2">
			                            		<button class="btn btn-primary">작성</button>
			                            	</div>
			                            </form>
		                            </div>
		                        </div>
		                    </div>
		                </section>
					</div>
				</div>
				<div class="modal-footer d-flex justify-content-end align-items-center">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
				</div>
		`;
		 return projectWorkSelectDetailHtml;
	};
	
	// 작업 목록 )
	// 프로젝트 작업 목록 가져오기, 처음에 보여주기
	projectWorkListUIData();
	
	// 작업 목록 )
	// 프로젝트 작업 목록 버튼 클릭 시 작업 리스트 가져오기
	proWorkListBtn.on("click", function(){
		projectWorkListUIData()
	});
	
	// 작업 목록 )
	// 프로젝트 전체 작업 목록 가져오는 함수
	function projectWorkListUIData(){
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workListView/${project.proCode}",
			method : "get",
			dataType : "json",
			success : function(resp) {
				console.log(resp);
				proWorkListDsip.empty();
				let trTags = [];
				for(var i=0; i<resp.length; i++){
					let isWorkPntNo = [];
					console.log("no",resp[i].workNo);
					if(resp[i].workPntNo==0){
						trTags.push(makeProjectWorkListHtml(resp[i]));
					}					
					for(var j=0; j<resp.length; j++){
						if(resp[i].workNo==resp[j].workPntNo){		
							isWorkPntNo.push(resp[j]);
						}
					}
					trTags.push(makeProjectWorkFntNoListHtml(isWorkPntNo));
					
				}
				proWorkListDsip.html(trTags);

			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	}
	
	// 작업 목록 )
	// 프로젝트 나에게 담당된 작업 목록
	proMyWorkListBtn.on("click", function(){

		let data = {
				"memEmail" : "${authMember.memEmail }",
				"proCode" : "${project.proCode}"
		}
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/myWorkListView",
			method : "post",
			data : JSON.stringify(data),
			contentType : "application/json;charset=utf-8",
			dataType : "json",
			success : function(resp) {
				proMyWorkListDsip.empty();
				let trTags = [];
				for(var i=0; i<resp.length; i++){
					let isWorkPntNo = [];
					console.log("no",resp[i].workNo);
					if(resp[i].workPntNo==0){
						trTags.push(makeProjectWorkListHtml(resp[i]));
					}					
					for(var j=0; j<resp.length; j++){
						if(resp[i].workNo==resp[j].workPntNo){		
							isWorkPntNo.push(resp[j]);
						}
					}
					trTags.push(makeProjectWorkFntNoListHtml(isWorkPntNo));
				}
				proMyWorkListDsip.html(trTags);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
		console.log(data);
	});
	
	// 작업 목록 )
	// 프로젝트 작업 자세히보기
/* 	$(document).on("click", "#projectWorkDetailBtn", function(){
		console.log(this.dataset["workNo"]);
		let data = {
				"workNo" : Number(this.dataset["workNo"]),
				"proCode" : "${project.proCode}"
		}
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workDetail",
			method : "post",
			data : JSON.stringify(data),
			contentType : "application/json;charset=utf-8",
			dataType : "json",
			success : function(resp) {
				console.log(resp);
				console.log(resp.workTitle);
				projectWorkSelectDetailDisp.html(makeProjectWorkSelectDetailHtml(resp));
				console.log(makeProjectWorkSelectDetailHtml(resp));
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	}); */
	
	// 작업 목록 )
	// 작업 삭제
	projectWorkDeleteBtn.on('click', function(){
		Swal.fire({
		   title: '삭제 하시겠습니까?',
		   text: '다시 되돌릴 수 없습니다. 신중하세요.',
		   icon: 'warning',
		   
		   showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음
		   confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정
		   cancelButtonColor: '#d33', // cancel 버튼 색깔 지정
		   confirmButtonText: '승인', // confirm 버튼 텍스트 지정
		   cancelButtonText: '취소', // cancel 버튼 텍스트 지정
		   
		   reverseButtons: true, // 버튼 순서 거꾸로
		   
		}).then(result => {
		   // 만약 Promise리턴을 받으면,
		   if (result.isConfirmed) { // 만약 모달창에서 confirm 버튼을 눌렀다면
			   
			   let workNoUpListData = []; 
				let workNoDownListData = []; 
				let workNoDownListDataObject = new Object();
				let inputUpTags = $(".workNoUpCheck").find("input").prevObject;
				let inputDownTags = $(".workNoDownCheck").find("input").prevObject;

			 	for(var i=0; i<inputUpTags.length; i++){
					if(inputUpTags[i].checked){
						workNoUpListData.push(inputUpTags[i].dataset.workNo);
					}
				}
				for(var i=0; i<inputDownTags.length; i++){
					if(inputDownTags[i].checked){
						let is_existed = Object.keys(workNoDownListDataObject).includes(inputDownTags[i].dataset.workPntNo);	
						if(!is_existed){
							workNoDownListData = [];
						}
						workNoDownListData.push(inputDownTags[i].dataset.workNo);
						workNoDownListDataObject[inputDownTags[i].dataset.workPntNo] = workNoDownListData;
					}
				}
				for(var i=0; i<workNoUpListData.length; i++){
					if(Object.keys(workNoDownListDataObject).includes(workNoUpListData[i])){
						delete workNoDownListDataObject[workNoUpListData[i]];
					}
				}
				
				let lastWorkNoList = Object.values(workNoDownListDataObject);

				let lastWorkUpListObject = new Object();
				
				console.log("하위작업",lastWorkNoList);
				console.log("상위작업",workNoUpListData);
				console.log("",workNoDownListDataObject);
				
				lastWorkUpListObject
				
				let workVOList = [];
				let upWorkVOList = [];

		 		for(var i=0; i<lastWorkNoList.length; i++){
		 			for(var j=0; j<lastWorkNoList[i].length; j++){
			 			let data = {
								"workNo" : lastWorkNoList[i][j]
							};
			 			workVOList.push(data);
		 			}
				}
		 		
		 		for(var i=0; i<workNoUpListData.length; i++){
		 			let data = {
		 					"workNo" : workNoUpListData[i]
		 			};
		 			upWorkVOList.push(data);
		 		}
		 		
		 		console.log("upWorkVOList",upWorkVOList);
		 		console.log("마지막",workVOList)
		 		
		 		sessionStorage.setItem("upWorkVOList",upWorkVOList);
		 		
		 		let workDownResultDataList = projectWorkDownList(upWorkVOList);
		 		for(var i=0; i<workDownResultDataList.length; i++){
		 			for(var j=0; j<workDownResultDataList[i].length; j++){
		 				workVOList.push(workDownResultDataList[i][j]);
		 			}
		 		}
		 		
		 		$.ajax({
					url : "${pageContext.request.contextPath}/project/project/workDelete",
					method : "post",
					data : JSON.stringify(workVOList),
					async: false,
					contentType : "application/json;charset=utf-8",
					dataType : "json",
					success : function(resp) {
						console.log("성공",resp);
						console.log(JSON.parse(sessionStorage.getItem("workVOList")));
						
				 		if(upWorkVOList!=null){
				 	 		$.ajax({
				 				url : "${pageContext.request.contextPath}/project/project/workDelete",
				 				method : "post",
				 				data : JSON.stringify(upWorkVOList),
				 				async: false,
				 				contentType : "application/json;charset=utf-8",
				 				dataType : "json",
				 				success : function(resp) {
									console.log(resp);
				 				},
				 				error : function(jqXHR, status, error) {
				 					console.log(jqXHR);
				 					console.log(status);
				 					console.log(error);
				 				}
				 			});
				 		}
				 		
						projectWorkListUIData();
					},
					error : function(jqXHR, status, error) {
						console.log(jqXHR);
						console.log(status);
						console.log(error);
					}
				});		
			   
		       Swal.fire('삭제 완료되었습니다.', '화끈하시네요~!', 'success');
		   }
		   else{
			   Swal.fire('', '삭제 취소하였습니다.', "failed");
			   return;
		   }
		});
	});
	
	// 작업 목록 )
	// 현재 작업의 하위작업 목록 데이터 가져다줌
	function projectWorkDownList(workUpList){
		console.log("hi");
		console.log(workUpList);
		let resultData;
		$.ajax({
			url : "${pageContext.request.contextPath}/project/project/workDownList",
			method : "post",
			data : JSON.stringify(workUpList),
			async: false,
			contentType : "application/json;charset=utf-8;",
			dataType : "json",
			success : function(resp) {
				console.log(resp);
				resultData = resp;
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
		return resultData;
	}
	
	// 작업 목록 )
	// 작업 수정폼 버튼 클릭 시
	$(document).on("click", ".projectWorkUpdateFormBtn", function(){
		let formFind = $(this).parent().siblings().find("form");
		let find23 = formFind.find("input[name='workNo']");
		if($(".workUpdateReadonlyOn").attr('readonly') == undefined){
			$(".workUpdateReadonlyOn").attr("readonly",true); 
		}else{
			$(".workUpdateReadonlyOn").removeAttr("readonly"); 
		}
	});
	
	// 작업 목록 )
	// 작업 수정 버튼 클릭 시
	$(document).on("click", ".projectWorkUpdateBtn", function(){
		Swal.fire({
		   title: '작업 수정 하시겠습니까?',
		   text: '다시 되돌릴 수 없습니다. 신중하세요.',
		   icon: 'warning',
		   
		   showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음
		   confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정
		   cancelButtonColor: '#d33', // cancel 버튼 색깔 지정
		   confirmButtonText: '승인', // confirm 버튼 텍스트 지정
		   cancelButtonText: '취소', // cancel 버튼 텍스트 지정
		   
		   reverseButtons: true, // 버튼 순서 거꾸로
		   
		}).then(result => {
		   // 만약 Promise리턴을 받으면,
		   if (result.isConfirmed) { // 만약 모달창에서 confirm 버튼을 눌렀다면
			   
			   let data = new Object();
				let cnt = 0;
				const formData2 = new FormData($(".projectWorkDetailForm")[0]);
				let entries = formData2.entries();
				for (const pair of entries) {
				    console.log(pair[0]+ ', ' + pair[1]); 
				}
				let dataObject = {};
				data = fn_seri(document.forms[1]);
				let workNoData = data.workNo;
				let workProgressList = data.workChargerListProgress;
				let workProgressMemEmail = data.workChargerListMemEmail;
				delete data.workChargerListProgress;
				delete data.workChargerListMemEmail;
				
				let workChargerList = [];
				for(let i=0; i<workProgressMemEmail.length; i++){
					let workChargerData = {};
					workChargerData['workNo'] = workNoData;
					workChargerData['memEmail'] = workProgressMemEmail[i];
					workChargerData['workProgress'] = workProgressList[i];
					workChargerList.push(workChargerData);
				}
				data['workChargerList'] = workChargerList;
				
				console.log("수정폼 data : ",data);
				
		 		$.ajax({
					url : "${pageContext.request.contextPath}/project/project/workUpdate",
					method : "post",
					data : JSON.stringify(data),
					contentType : "application/json;charset=utf-8;",
					success : function(resp) {
						console.log(resp);
					},
					error : function(jqXHR, status, error) {
						console.log(jqXHR);
						console.log(status);
						console.log(error);
					}
				});  
			   
		       Swal.fire('작업 수정 완료되었습니다.', '화끈하시네요~!', 'success');
		      
		   }
		   else{
			   Swal.fire('', '작업 수정 취소하였습니다.', "failed");
			   return;
		   }
		});	
	});
	/**************************** 작업 목록 끝 ****************************/

</script>


